20170122: 
http://stackoverflow.com/questions/1848930/how-to-add-a-form-field-to-an-existing-pdf-with-itextsharp
Using pdfStamper you can complete it.

PdfStamper Stamper= new PdfStamper(new PdfReader(sourcefile), File.Create(NewOutputFile)); 

TextField moreText = new TextField(Stamper.Writer,
                          new iTextSharp.text.Rectangle(20, 20, 590, 780), "moreText");

            moreText.Visibility = TextField.VISIBLE_BUT_DOES_NOT_PRINT;
            moreText.Text = "Use this space for any additional information";
            moreText.Options = (TextField.MULTILINE);

PdfFormField Fieldtxt = moreText.GetTextField();

Stamper.AddAnnotation(Fieldtxt, n);
=============================================================================================================
20170112:
	"[List][Projekt][AI_01][Stena_01][UI_01][UN20_01][DI_01]"
===================================================================================================
20170104: XML Save Sources:
	http://stackoverflow.com/questions/2434534/serialize-an-object-to-string
	https://social.msdn.microsoft.com/Forums/en-US/468ded47-ea1c-4265-90ca-9ec69dd401be/xml-serialization-from-datagrid-and-textboxes?forum=csharpgeneral
	http://stackoverflow.com/questions/16225303/create-new-xml-element
	http://stackoverflow.com/questions/12872992/serilaization-xml-datagrid-textbox
	http://www.java2s.com/Code/CSharp/XML/Xml-Serialization.htm
	http://stackoverflow.com/questions/24838411/xmlserialization-of-list-of-mixed-type-objects-in-c-sharp
	https://msdn.microsoft.com/en-us/library/system.xml.serialization.xmlserializer%28v=vs.110%29.aspx?f=255&MSPPError=-2147217396
	http://stackoverflow.com/questions/18841690/serialize-and-store-an-image-in-an-xml-file
	https://www.codeproject.com/articles/487571/xml-serialization-and-deserialization-part-2
	http://stackoverflow.com/questions/18841690/serialize-and-store-an-image-in-an-xml-file
	http://stackoverflow.com/questions/14339577/bitmap-xml-serialization
	* https://www.roelvanlisdonk.nl/2009/05/25/c-convert-a-bitmap-to-byte/
	* https://www.codeproject.com/Articles/80289/Saving-Image-Data-in-an-XML-File
===================================================================================================
20161130:
private readonly Dictionary<Type, ControlType?> _controlTypes = new Dictionary<Type, ControlType?>
    {
        {typeof(CheckBox), ControlType.CheckBox},
        {typeof(CheckBoxList), ControlType.CheckBoxList},
        {typeof(DropDownList), ControlType.DropDownList},
        {typeof(HiddenField), ControlType.HiddenField},
        {typeof(ListBox), ControlType.ListBox},
        {typeof(RadioButton), ControlType.RadioButton},
        {typeof(RadioButtonList), ControlType.RadioButtonList},
        {typeof(TextBox), ControlType.TextBox},
        {typeof(Label), ControlType.Label},
        {typeof(DatePicker), ControlType.DatePicker},
        {typeof(CustomSelect), ControlType.CustomSelect}
    };

private void PopulateFields(Control control)
{
    ControlType? controlType;
    _controlTypes.TryGetValue(control.GetType(), out controlType);

    // recurse over the children
    if (control.Controls.Count > 0 && controlType == null) // don't want to recurse into children of controls we are reading values of
    {
        foreach(Control childControl in control.Controls)
        {
            PopulateFields(childControl);
        }
    }

    if (controlType != null)
    {
        switch (controlType)
        {
            case ControlType.CheckBox:
            case ControlType.RadioButton:
                CheckBox checkBox = control as CheckBox;
                    if (checkBox != null)
                        _fields.AddFieldValue(checkBox.ID, checkBox.Checked ? "Checked" : "Not Checked");
                    break;
            case ControlType.CheckBoxList:
            case ControlType.ListBox:
            case ControlType.RadioButtonList:
                ListControl listControl = control as ListControl;
                if (listControl != null)
                    _fields.AddFieldValue(listControl.ID, String.Join(", ", listControl.Items.Cast<ListItem>().Where(item => item.Selected).Select(item => item.Value).ToArray()));
                break;
            case ControlType.DropDownList:
                DropDownList dropDownList = control as DropDownList;
                if (dropDownList != null)
                    _fields.AddFieldValue(dropDownList.ID, dropDownList.SelectedValue);
                break;
            case ControlType.HiddenField:
                HiddenField hiddenField = control as HiddenField;
                if (hiddenField != null)
                    _fields.AddFieldValue(hiddenField.ID, hiddenField.Value);
                break;
            case ControlType.TextBox:
                TextBox textBox = control as TextBox;
                if (textBox != null)
                    _fields.AddFieldValue(textBox.ID, textBox.Text);
                break;
            case ControlType.DatePicker:
                DatePicker datePicker = control as DatePicker;
                if (datePicker != null)
                    _fields.AddFieldValue(datePicker.ID, datePicker.Text);
                break;
            case ControlType.CustomSelect:
                CustomSelect customSelect = control as CustomSelect;
                if(customSelect != null)
                    _fields.AddFieldValue(customSelect.ID, customSelect.SelectedValue);
                break;
            case ControlType.Label:
                Label label = control as Label;
                if(label != null)
                    _fields.AddFieldLabel(label.AssociatedControlID, label.Text);
                break;
            default:
                throw new Exception("Unhandled Control");
        }
    }
}
=============================================
20151120:
A using namespace directive can only be applied to namespaces; 'System.Xml.Serialization.XmlSerializer' is a type not a namespace (CS0138) - F:\Alexandria\Devel\CS\EnDusan\EnDusan\SaveProjectForm.cs:14,7
............
// Determine if the OK button was clicked on the dialog box.
    if (form1.DialogResult == DialogResult.OK)
    {
       // Display a message box indicating that the OK button was clicked.
       MessageBox.Show("The OK button on the form was clicked.");
       // Optional: Call the Dispose method when you are finished with the dialog box.
       form1.Dispose();
    }
    else
    {
       // Display a message box indicating that the Cancel button was clicked.
       MessageBox.Show("The Cancel button on the form was clicked.");
       // Optional: Call the Dispose method when you are finished with the dialog box.
       form1.Dispose();
    }
===========================================================
[Serializable]
public class XMLExample : INotifyPropertyChanged
{
public event PropertyChangedEventHandler PropertyChanged;
public XMLExample()
{
ID = "Spaghetti";
Initial = "Linguini";
Details = new List<Detail>();
}
public string ID { get; set; } // Textbox
public string Initial { get; set; } // Textbox
public List<Detail> Details { get; set; } // Datagrid
}
[Serializable]
public class Detail
{
public Detail()
{
// default values, if appropriate.
FirstName = "John";
LastName = "Shaw";
}
[XmlElement("FirstName")]
public string FirstName { get; set; }
[XmlElement("LastName")]
public string LastName { get; set; }
}
After deserializing, in your Button1 handler, you can populate your user interface controls
appropriately. Before serializing the class, in your Button2 handler, you'll need to populate the
properties in your class appropriately.
XmlSerializer _serializer = new XmlSerializer(typeof(XMLExample));
XMLExample _example = new XMLExample();
// Read file.
using (TextReader textReader = new StreamReader(@"C:\test\testserialization.xml"))
{
_example = (XMLExample)_serializer.Deserialize(textReader);
textReader.Close();
}
// Populate user interface from the class.
textBox1.Text = _example.ID;
textBox2.Text = _example.Initial;
// etc...
// Update class from user interface
_example.Details.Add(new Detail() { FirstName = "John", LastName = "Doe" });
_example.Details.Add(new Detail() { FirstName = "Jane", LastName = "Doe" });
// Write file.
using (TextWriter textWriter = new StreamWriter(@"C:\test\testserialization.xml"))
{
_serializer.Serialize(textWriter, _example);
textWriter.Close();
}
testserialization.xml
11/18/2015 c# - Serilaization xml datagrid/textbox - Stack Overflow
data:text/html;charset=utf-8,%3Cp%20style%3D%22margin%3A%200px%200px%201em%3B%20padding%3A%200px%3B%20border%3A%200px%3B%2… 2/2
<?xml version="1.0" encoding="utf-8"?>
<XMLExample xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:xsd="http://www.w3.org/2001/XMLSchema">
<ID>Spaghetti</ID>
<Initial>Linguini</Initial>
<Details>
<Detail>
<FirstName>John</FirstName>
<LastName>Doe</LastName>
</Detail>
<Detail>
<FirstName>Jane</FirstName>
<LastName>Doe</LastName>
</Detail>
</Details>
</XMLExample>
======================================
System.InvalidOperationException: There was an error reflecting type 'EnDusan.ExportSerializDef'. ---> System.InvalidOperationException: Cannot serialize member 'EnDusan.ExportSerializDef.Details' of type 'System.Collections.Generic.List`1[[EnDusan.DGVDetail, EnDusan, Version=1.0.5804.26361, Culture=neutral, PublicKeyToken=null]]', see inner exception for more details. ---> System.InvalidOperationException: EnDusan.DGVDetail cannot be serialized because it does not have a parameterless constructor.
====================================
System.NotSupportedException: The given path's format is not supported.
=====================================

*****************************************************
TODO:
====================
Write *.pdf
Write *.rtf
========================
The item "obj\Debug\EnDusan.ExportProjectRTFForm.resources" was specified more than once in the "Resources" parameter.  Duplicate items are not supported by the "Resources" parameter. (MSB3105)
=====================
"}\r\n\par \pard\plain \s0\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\alang1081\loch\f3\fs24\lang1033\ql\nowidctlpar\hyphpar0\ltrpar\b\rtlch \ltrch\loch\fs32\r\n\r\n\par \trowd\trql\trleft0\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw15\brdrcf17\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx2059\clbrdrt\brdrs\brdrw15\brdrcf17\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx4995\clbrdrt\brdrs\brdrw15\brdrcf17\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx7789\clbrdrt\brdrs\brdrw15\brdrcf17\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\clbrdrr\brdrs\brdrw15\brdrcf17\cellx9970\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\b\rtlch \ltrch\loch\fs32\r\nPolozka}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\b\rtlch \ltrch\loch\fs32\r\nA [mm]}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\b\rtlch \ltrch\loch\fs32\r\nU1 [mm]}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\b\rtlch \ltrch\loch\fs32\r\nU2 [mm]}\cell\row\pard\trowd\trql\trleft0\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx2059\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx4995\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx7789\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\clbrdrr\brdrs\brdrw15\brdrcf17\cellx9970\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\b\rtlch \ltrch\loch\fs32\r\n1}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=A1_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U1.1_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U2.1_Rep}\cell\row\pard\trowd\trql\trleft0\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx2059\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx4995\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx7789\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\clbrdrr\brdrs\brdrw15\brdrcf17\cellx9970\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\b\rtlch \ltrch\loch\fs32\r\n2}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=A2_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U1.2_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U2.2_Rep}\cell\row\pard\trowd\trql\trleft0\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx2059\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx4995\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx7789\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\clbrdrr\brdrs\brdrw15\brdrcf17\cellx9970\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\b\rtlch \ltrch\loch\fs32\r\n3}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=A3_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U1.3_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U2.3_Rep}\cell\row\pard\trowd\trql\trleft0\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx2059\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx4995\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx7789\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\clbrdrr\brdrs\brdrw15\brdrcf17\cellx9970\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\b\rtlch \ltrch\loch\fs32\r\n4}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=A4_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U1.4_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U2.4_Rep}\cell\row\pard\trowd\trql\trleft0\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx2059\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx4995\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx7789\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\clbrdrr\brdrs\brdrw15\brdrcf17\cellx9970\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\b\rtlch \ltrch\loch\fs32\r\n5}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=A5_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U1.5_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U2.5_Rep}\cell\row\pard\trowd\trql\trleft0\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx2059\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx4995\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx7789\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\clbrdrr\brdrs\brdrw15\brdrcf17\cellx9970\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\b\rtlch \ltrch\loch\fs32\r\n6}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=A6_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U1.6_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U2.6_Rep}\cell\row\pard\trowd\trql\trleft0\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx2059\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx4995\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx7789\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\clbrdrr\brdrs\brdrw15\brdrcf17\cellx9970\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\b\rtlch \ltrch\loch\fs32\r\n7}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=A7_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U1.7_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U2.7_Rep}\cell\row\pard\trowd\trql\trleft0\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx2059\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx4995\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx7789\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\clbrdrr\brdrs\brdrw15\brdrcf17\cellx9970\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\b\rtlch \ltrch\loch\fs32\r\n8}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=A8_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U1.8_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U2.8_Rep}\cell\row\pard\trowd\trql\trleft0\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx2059\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx4995\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx7789\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\clbrdrr\brdrs\brdrw15\brdrcf17\cellx9970\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\b\rtlch \ltrch\loch\fs32\r\n9}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=A9_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U1.9_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U2.9_Rep}\cell\row\pard\trowd\trql\trleft0\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx2059\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx4995\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\cellx7789\clbrdrl\brdrs\brdrw15\brdrcf17\clbrdrb\brdrs\brdrw15\brdrcf17\clbrdrr\brdrs\brdrw15\brdrcf17\cellx9970\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\b\rtlch \ltrch\loch\fs32\r\n10}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=A10_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U1.10_Rep}\cell\pard\plain \s23\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\loch\f3\fs24\lang1033\intbl\ql\nowidctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch\fs32\r\n=U2.10_Rep}\cell\row\pard\pard\plain \s0\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\alang1081\loch\f3\fs24\lang1033\ql\nowidctlpar\hyphpar0\ltrpar\b\rtlch \ltrch\loch\fs32\r\n\r\n\par \pard\plain \s0\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\alang1081\loch\f3\fs24\lang1033\ql\nowidctlpar\hyphpar0\ltrpar\b\rtlch \ltrch\loch\fs32\r\n\r\n\par \pard\plain \s0\ql\nowidctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs24\alang1081\loch\f3\fs24\lang1033\ql\nowidctlpar\hyphpar0\ltrpar\rtlch \ltrch\loch\r\n\r\n\par }"
 


				    case "Project":
						sNewWord = SPtxtProcessedProject.Text;
						/*sRTFWorkFix = sSubWordStart+sNewWord+ sSubWordEnd;				        
				        iCells++;*/
						break;
				    case "DATE":
				        /*sNewWord = DateTime.Now.ToString("yyyy.MM.dd/HH-mm-ss");
				        sRTFWorkFix = sSubWordStart+sNewWord+ sSubWordEnd;
				        iCells++;*/
				        break;
				    default:
				        //Test columns				        
				        iIndexOfString = sWordProcKey.IndexOf("A");
				        /*if (iIndexOfString == 0 ) {
				        	string sNumberRow = Convert.ToString(sWordProcKey[iIndexOfString+1]);
				        	iRowDGV  = Convert.ToInt16(sNumberRow) - 1;
				        	iColumnDGV = 1;
				        	string sA = "";
							DataGridViewRow DGVR = DGVProcesssed.Rows[iRowDGV];
							//int iColumn = 1;
							sA = DGVProcesssed[iColumnDGV,iRowDGV].Value.ToString();
							//.Value.ToString;
				        	sNewWord = sA;
				        	sRTFWorkFix = sSubWordStart+sNewWord+ sSubWordEnd;
				        	iCells++;
				        	break;
				        }
				        iIndexOfString = sWordProcKey.IndexOf("U1.");
				        if (iIndexOfString == 0 ) {				        
				        	string sNumberRow = Convert.ToString(sWordProcKey[iIndexOfString+3]);
				        	iRowDGV = Convert.ToInt16(sNumberRow) - 1;
				        	string sA = "";
				        	iColumnDGV = 2;
							DataGridViewRow DGVR = DGVProcesssed.Rows[iRowDGV];
							sA = DGVProcesssed[iColumnDGV,iRowDGV].Value.ToString();
							//.Value.ToString;
				        	sNewWord = sA;
				        	sRTFWorkFix = sSubWordStart+sNewWord+ sSubWordEnd;
				        	iCells++;
				        	break;
				        }
				        iIndexOfString = sWordProcKey.IndexOf("U2.");
				        if (iIndexOfString == 0 ) {				        
				        	string sNumberRow = Convert.ToString(sWordProcKey[iIndexOfString+3]);
				        	iRowDGV = Convert.ToInt16(sNumberRow) - 1;
				        	string sA = "";
				        	iColumnDGV = 3;
							DataGridViewRow DGVR = DGVProcesssed.Rows[iRowDGV];
							sA = DGVProcesssed[iColumnDGV,iRowDGV].Value.ToString();
							//.Value.ToString;
				        	sNewWord = sA;
				        	sRTFWorkFix = sSubWordStart+sNewWord+ sSubWordEnd;
				        	iCells++;
				        	break;
				        }*/	
==================================
20151204:
Value Type
Value type variables can be assigned a value directly. They are derived from the class System.ValueType.

The value types directly contain data. Some examples are int, char, and float, which stores numbers, alphabets, and floating point numbers, respectively. When you declare an int type, the system allocates memory to store the value.

The following table lists the available value types in C# 2010:

Type	Represents	Range	Default Value
bool	Boolean value	True or False	False
byte	8-bit unsigned integer	0 to 255	0
char	16-bit Unicode character	U +0000 to U +ffff	'\0'
decimal	128-bit precise decimal values with 28-29 significant digits	(-7.9 x 1028 to 7.9 x 1028) / 100 to 28	0.0M
double	64-bit double-precision floating point type	(+/-)5.0 x 10-324 to (+/-)1.7 x 10308	0.0D
float	32-bit single-precision floating point type	-3.4 x 1038 to + 3.4 x 1038	0.0F
int	32-bit signed integer type	-2,147,483,648 to 2,147,483,647	0
long	64-bit signed integer type	-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807	0L
sbyte	8-bit signed integer type	-128 to 127	0
short	16-bit signed integer type	-32,768 to 32,767	0
uint	32-bit unsigned integer type	0 to 4,294,967,295	0
ulong	64-bit unsigned integer type	0 to 18,446,744,073,709,551,615	0
ushort	16-bit unsigned integer type	0 to 65,535	0
To get the exact size of a type or a variable on a particular platform, you can use the sizeof method. The expression sizeof(type) yields the storage size of the object or type in bytes. Following is an example to get the size of int type on any machine:

using System;
namespace DataTypeApplication
{
   class Program 
   {
      static void Main(string[] args)
      {
         Console.WriteLine("Size of int: {0}", sizeof(int));
         Console.ReadLine();
      }
   }
}
When the above code is compiled and executed, it produces the following result:

Size of int: 4

===============================================================
Format specifier
Description
Examples
"d"
The day of the month, from 1 through 31.
More information: The "d" Custom Format Specifier.
2009-06-01T13:45:30 -> 1
2009-06-15T13:45:30 -> 15
"dd"
The day of the month, from 01 through 31.
More information: The "dd" Custom Format Specifier.
2009-06-01T13:45:30 -> 01
2009-06-15T13:45:30 -> 15
"ddd"
The abbreviated name of the day of the week.
More information: The "ddd" Custom Format Specifier.
2009-06-15T13:45:30 -> Mon (en-US)
2009-06-15T13:45:30 -> Пн (ru-RU)
2009-06-15T13:45:30 -> lun. (fr-FR)
"dddd"
The full name of the day of the week.
More information: The "dddd" Custom Format Specifier.
2009-06-15T13:45:30 -> Monday (en-US)
2009-06-15T13:45:30 -> понедельник (ru-RU)
2009-06-15T13:45:30 -> lundi (fr-FR)
"f"
The tenths of a second in a date and time value.
More information: The "f" Custom Format Specifier.
2009-06-15T13:45:30.6170000 -> 6
2009-06-15T13:45:30.05 -> 0
"ff"
The hundredths of a second in a date and time value.
More information: The "ff" Custom Format Specifier.
2009-06-15T13:45:30.6170000 -> 61
2009-06-15T13:45:30.0500000 -> 00
"fff"
The milliseconds in a date and time value.
More information: The "fff" Custom Format Specifier.
6/15/2009 13:45:30.617 -> 617
6/15/2009 13:45:30.0005 -> 000
"ffff"
The ten thousandths of a second in a date and time value.
More information: The "ffff" Custom Format Specifier.
2009-06-15T13:45:30.6175000 -> 6175
2009-06-15T13:45:30.0000500 -> 0000
"fffff"
The hundred thousandths of a second in a date and time value.
More information: The "fffff" Custom Format Specifier.
2009-06-15T13:45:30.6175400 -> 61754
6/15/2009 13:45:30.000005 -> 00000
"ffffff"
The millionths of a second in a date and time value.
More information: The "ffffff" Custom Format Specifier.
2009-06-15T13:45:30.6175420 -> 617542
2009-06-15T13:45:30.0000005 -> 000000
"fffffff"
The ten millionths of a second in a date and time value.
More information: The "fffffff" Custom Format Specifier.
2009-06-15T13:45:30.6175425 -> 6175425
2009-06-15T13:45:30.0001150 -> 0001150
"F"
If non-zero, the tenths of a second in a date and time value.
More information: The "F" Custom Format Specifier.
2009-06-15T13:45:30.6170000 -> 6
2009-06-15T13:45:30.0500000 -> (no output)
"FF"
If non-zero, the hundredths of a second in a date and time value.
More information: The "FF" Custom Format Specifier.
2009-06-15T13:45:30.6170000 -> 61
2009-06-15T13:45:30.0050000 -> (no output)
"FFF"
If non-zero, the milliseconds in a date and time value.
More information: The "FFF" Custom Format Specifier.
2009-06-15T13:45:30.6170000 -> 617
2009-06-15T13:45:30.0005000 -> (no output)
"FFFF"
If non-zero, the ten thousandths of a second in a date and time value.
More information: The "FFFF" Custom Format Specifier.
2009-06-15T13:45:30.5275000 -> 5275
2009-06-15T13:45:30.0000500 -> (no output)
"FFFFF"
If non-zero, the hundred thousandths of a second in a date and time value.
More information: The "FFFFF" Custom Format Specifier.
2009-06-15T13:45:30.6175400 -> 61754
2009-06-15T13:45:30.0000050 -> (no output)
"FFFFFF"
If non-zero, the millionths of a second in a date and time value.
More information: The "FFFFFF" Custom Format Specifier.
2009-06-15T13:45:30.6175420 -> 617542
2009-06-15T13:45:30.0000005 -> (no output)
"FFFFFFF"
If non-zero, the ten millionths of a second in a date and time value.
More information: The "FFFFFFF" Custom Format Specifier.
2009-06-15T13:45:30.6175425 -> 6175425
2009-06-15T13:45:30.0001150 -> 000115
"g", "gg"
The period or era.
More information: The "g" or "gg" Custom Format Specifier.
2009-06-15T13:45:30.6170000 -> A.D.
"h"
The hour, using a 12-hour clock from 1 to 12.
More information: The "h" Custom Format Specifier.
2009-06-15T01:45:30 -> 1
2009-06-15T13:45:30 -> 1
"hh"
The hour, using a 12-hour clock from 01 to 12.
More information: The "hh" Custom Format Specifier.
2009-06-15T01:45:30 -> 01
2009-06-15T13:45:30 -> 01
"H"
The hour, using a 24-hour clock from 0 to 23.
More information: The "H" Custom Format Specifier.
2009-06-15T01:45:30 -> 1
2009-06-15T13:45:30 -> 13
"HH"
The hour, using a 24-hour clock from 00 to 23.
More information: The "HH" Custom Format Specifier.
2009-06-15T01:45:30 -> 01
2009-06-15T13:45:30 -> 13
"K"
Time zone information.
More information: The "K" Custom Format Specifier.
With DateTime values:
2009-06-15T13:45:30, Kind Unspecified ->
2009-06-15T13:45:30, Kind Utc -> Z
2009-06-15T13:45:30, Kind Local -> -07:00 (depends on local computer settings)
With DateTimeOffset values:
2009-06-15T01:45:30-07:00 --> -07:00
2009-06-15T08:45:30+00:00 --> +00:00
"m"
The minute, from 0 through 59.
More information: The "m" Custom Format Specifier.
2009-06-15T01:09:30 -> 9
2009-06-15T13:29:30 -> 29
"mm"
The minute, from 00 through 59.
More information: The "mm" Custom Format Specifier.
2009-06-15T01:09:30 -> 09
2009-06-15T01:45:30 -> 45
"M"
The month, from 1 through 12.
More information: The "M" Custom Format Specifier.
2009-06-15T13:45:30 -> 6
"MM"
The month, from 01 through 12.
More information: The "MM" Custom Format Specifier.
2009-06-15T13:45:30 -> 06
"MMM"
The abbreviated name of the month.
More information: The "MMM" Custom Format Specifier.
2009-06-15T13:45:30 -> Jun (en-US)
2009-06-15T13:45:30 -> juin (fr-FR)
2009-06-15T13:45:30 -> Jun (zu-ZA)
"MMMM"
The full name of the month.
More information: The "MMMM" Custom Format Specifier.
2009-06-15T13:45:30 -> June (en-US)
2009-06-15T13:45:30 -> juni (da-DK)
2009-06-15T13:45:30 -> uJuni (zu-ZA)
"s"
The second, from 0 through 59.
More information: The "s" Custom Format Specifier.
2009-06-15T13:45:09 -> 9
"ss"
The second, from 00 through 59.
More information: The "ss" Custom Format Specifier.
2009-06-15T13:45:09 -> 09
"t"
The first character of the AM/PM designator.
More information: The "t" Custom Format Specifier.
2009-06-15T13:45:30 -> P (en-US)
2009-06-15T13:45:30 -> 午 (ja-JP)
2009-06-15T13:45:30 -> (fr-FR)
"tt"
The AM/PM designator.
More information: The "tt" Custom Format Specifier.
2009-06-15T13:45:30 -> PM (en-US)
2009-06-15T13:45:30 -> 午後 (ja-JP)
2009-06-15T13:45:30 -> (fr-FR)
"y"
The year, from 0 to 99.
More information: The "y" Custom Format Specifier.
0001-01-01T00:00:00 -> 1
0900-01-01T00:00:00 -> 0
1900-01-01T00:00:00 -> 0
2009-06-15T13:45:30 -> 9
2019-06-15T13:45:30 -> 19
"yy"
The year, from 00 to 99.
More information: The "yy" Custom Format Specifier.
0001-01-01T00:00:00 -> 01
0900-01-01T00:00:00 -> 00
1900-01-01T00:00:00 -> 00
2019-06-15T13:45:30 -> 19
"yyy"
The year, with a minimum of three digits.
More information: The "yyy" Custom Format Specifier.
0001-01-01T00:00:00 -> 001
0900-01-01T00:00:00 -> 900
1900-01-01T00:00:00 -> 1900
2009-06-15T13:45:30 -> 2009
"yyyy"
The year as a four-digit number.
More information: The "yyyy" Custom Format Specifier.
0001-01-01T00:00:00 -> 0001
0900-01-01T00:00:00 -> 0900
1900-01-01T00:00:00 -> 1900
2009-06-15T13:45:30 -> 2009
"yyyyy"
The year as a five-digit number.
More information: The "yyyyy" Custom Format Specifier.
0001-01-01T00:00:00 -> 00001
2009-06-15T13:45:30 -> 02009
"z"
Hours offset from UTC, with no leading zeros.
More information: The "z" Custom Format Specifier.
2009-06-15T13:45:30-07:00 -> -7
"zz"
Hours offset from UTC, with a leading zero for a single-digit value.
More information: The "zz" Custom Format Specifier.
2009-06-15T13:45:30-07:00 -> -07
"zzz"
Hours and minutes offset from UTC.
More information: The "zzz" Custom Format Specifier.
2009-06-15T13:45:30-07:00 -> -07:00
":"
The time separator.
More information: The ":" Custom Format Specifier.
2009-06-15T13:45:30 -> : (en-US)
2009-06-15T13:45:30 -> . (it-IT)
2009-06-15T13:45:30 -> : (ja-JP)
"/"
The date separator.
More Information: The "/" Custom Format Specifier.
2009-06-15T13:45:30 -> / (en-US)
2009-06-15T13:45:30 -> - (ar-DZ)
2009-06-15T13:45:30 -> . (tr-TR)
"string"
'string'
Literal string delimiter.
2009-06-15T13:45:30 ("arr:" h:m t) -> arr: 1:45 P
2009-06-15T13:45:30 ('arr:' h:m t) -> arr: 1:45 P
%
Defines the following character as a custom format specifier.
More information:Using Single Custom Format Specifiers.
2009-06-15T13:45:30 (%h) -> 1
\
The escape character.
2009-06-15T13:45:30 (h \h) -> 1 h
Any other character
The character is copied to the result string unchanged.
More information: Using the Escape Character.
2009-06-15T01:45:30 (arr hh:mm t) -> arr 01:45 A
==============================================
"<?xml version=\"1.0\" encoding=\"utf-8\"?><EnCNF><Polozka NazevPolozky=\"DateEditEditace\">1</Polozka><Polozka NazevPolozky=\"PocetDatRadku\">2</Polozka><Polozka NazevPolozky=\"PathDATA\">3</Polozka><Polozka NazevPolozky=\"PathEnCNF\">4</Polozka><Polozka NazevPolozky=\"\">5</Polozka></EnCNF>"
=============================
